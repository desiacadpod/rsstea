name: Fetch new feeds and push content to Github Pages
on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - 'feeds.php'
      - 'base.html'
  schedule:
    - cron: '0 */24 * * *'  # Runs every 2 hours
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN
permissions:
  id-token: write
  contents: write
  actions: write
  checks: write
  deployments: write
  discussions: write
  issues: write
  pages: write
  packages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4  # Updated to v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4  # Updated to v4
      
      - name: Run feeds.php
        run: php feeds.php

      - name: Check expected podcast logo
        run: |
          LOGO_FILE=$(php -r "
            \$json = json_decode(file_get_contents('feed.json'), true);
            if (!empty(\$json[0]['link'])) {
                \$link = \$json[0]['link'];
                if (preg_match('#/pod/show/([^/]+)/#', \$link, \$m)) {
                    \$safeName = strtolower(preg_replace('/[^a-z0-9_-]/', '_', \$m[1]));
                    echo \$safeName . '.png';
                }
            }
          ")
          echo "Base.html would look for logo file: $LOGO_FILE"
          if [ -f "$LOGO_FILE" ]; then
            echo "Logo file exists: $LOGO_FILE"
          else
            echo "Logo file does NOT exist: $LOGO_FILE"
          fi
          
      - name: Commit files
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add --all
          git commit -m "Updating the repository" || echo "No changes to commit"
      
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3  # Updated to v3
        with:
          path: './public'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  # Updated to v4
